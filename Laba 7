using System;

public class Lamda
{
    Expression<Func<double, double>> expr = n => n + 1;
    Func<double, double> func = expr.Compile();
for (int i = 0; i< 10; i++)
{
Console.WriteLine(func(i));
}
Console.ReadKey();
}
namespace bangorno
{
    class Program
    {
        static void Main(string[] args)
        {
            ParameterExpression number =

Expression.Parameter(typeof(double), "num");

            ConstantExpression one =

            Expression.Constant((double)1, typeof(double));

            BinaryExpression add =

            Expression.Add(number, one);
            Expression<Func<double, double>> lambda1 =

            Expression.Lambda<Func<double, double>>(

            add, new ParameterExpression[] { number });

            Func<double, double> func = lambda1.Compile();
            for (int i = 0; i < 10; i++)
            {
                Console.WriteLine(func(i));
            }
            Console.ReadKey();
        }
    }
}
    }
}
